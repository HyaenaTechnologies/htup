load(
    "@bazel_gazelle//:def.bzl", 
    "gazelle",
)
load(
    "@io_bazel_rules_go//go:def.bzl", 
    "go_binary",
)

gazelle(name = "bazel_gazelle")

gazelle(
    name = "gazelle_update_repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

go_binary(
    goarch = amd64,
    goos = darwin, 
    name = "darwin_amd64",
    out = "bin/darwin/amd64/htwork_darwin_amd64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)

go_binary(
    goarch = arm64,
    goos = darwin, 
    name = "darwin_arm64",
    out = "bin/darwin/arm64/htwork_darwin_arm64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)

go_binary(
    goarch = amd64,
    goos = linux, 
    name = "linux_amd64",
    out = "bin/linux/amd64/htwork_linux_amd64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)

go_binary(
    goarch = arm64,
    goos = linux, 
    name = "linux_arm64",
    out = "bin/linux/arm64/htwork_linux_arm64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)

go_binary(
    goarch = amd64,
    goos = windows, 
    name = "windows_amd64",
    out = "bin/windows/amd64/htwork_windows_amd64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)

go_binary(
    goarch = arm64,
    goos = windows, 
    name = "windows_arm64",
    out = "bin/windows/arm64/htwork_windows_arm64",
    pure = "on",
    srcs = ["lib/**"],
    deps = [
        "//lib:local_workflow_lib",
    ],
)